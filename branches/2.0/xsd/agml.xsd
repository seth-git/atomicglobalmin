<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns="http://sourceforge.net/projects/atomicglobalmin/"
           targetNamespace="http://sourceforge.net/projects/atomicglobalmin/"
           elementFormDefault="qualified">
<xs:element name="agml">
	<xs:complexType>
		<xs:choice>
			<xs:element name="simulatedAnnealing" type="simulatedAnnealingType"/>
			<xs:element name="randomSearch" type="randomSearchType"/>
			<xs:element name="particleSwarmOptimization" type="psoType"/>
			<xs:element name="geneticAlgorithm" type="gaType"/>
			<xs:element name="batch" type="batchType"/>
		</xs:choice>
		<xs:attribute name="version" type="xs:string" use="required"/>
		<xs:attribute name="language" type="xs:string" default="en"/>
	</xs:complexType>
</xs:element>

<xs:complexType name="simulatedAnnealingType">
	<xs:sequence>
		<xs:element name="setup" type="simulatedAnnealingSetupType"/>
		<xs:element name="constraints" type="constraintsType" minOccurs="0" maxOccurs="unbounded"/>
		<xs:element name="energy" type="energyType"/>
		<xs:element name="resume" type="simulatedAnnealingResumeType" minOccurs="0" maxOccurs="unbounded"/>
		<xs:element name="results" type="resultsType" minOccurs="0"/>
	</xs:sequence>
	<xs:attribute name="constraints" type="xs:string"/>
</xs:complexType>

<xs:complexType name="constraintsType">
	<xs:all>
		<xs:element name="cube" minOccurs="0">
			<xs:complexType>
				<xs:attribute name="size" type="positiveDecimal"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="atomicDistances" type="atomicDistancesType" minOccurs="0"/>
	</xs:all>
	<xs:attribute name="name" type="xs:string" use="required"/>
	<xs:attribute name="base" type="xs:string"/>
</xs:complexType>
<xs:complexType name="atomicDistancesType">
	<xs:sequence>
		<xs:element name="min" minOccurs="0" maxOccurs="unbounded">
			<xs:complexType>
				<xs:attribute name="value" type="positiveDecimal" use="required"/>
				<xs:attribute name="z1" type="xs:string"/>
				<xs:attribute name="z2" type="xs:string"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="max" minOccurs="0" maxOccurs="1">
			<xs:complexType>
				<xs:attribute name="value" type="positiveDecimal" use="required"/>
			</xs:complexType>
		</xs:element>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="energyType">
	<xs:choice>
		<xs:element name="external" type="externalCalcType"/>
		<xs:element name="internal" type="internalCalcType"/>
	</xs:choice>
</xs:complexType>
<xs:complexType name="internalCalcType">
	<xs:attribute name="method" type="internalEnergyMethods" use="required"/>
	<xs:attribute name="opt" type="xs:boolean" default="false"/>
</xs:complexType>
<xs:complexType name="externalCalcType">
	<xs:all>
		<xs:element name="temporaryDirectory" minOccurs="0">
			<xs:complexType>
				<xs:attribute name="path" type="xs:string" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="resultsDirectory" minOccurs="0">
			<xs:complexType>
				<xs:attribute name="path" type="xs:string" use="required"/>
				<xs:attribute name="maxFiles" type="xs:positiveInteger" default="1"/>
				<xs:attribute name="filePrefix" type="xs:string" default="best"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="header" type="xs:string" />
	</xs:all>
	<xs:attribute name="method" type="externalEnergyMethods" use="required"/>
	<xs:attribute name="transitionStateSearch" type="xs:boolean" default="false"/>
</xs:complexType>
<xs:simpleType name="internalEnergyMethods">
	<xs:restriction base="xs:string">
		<xs:enumeration value="Lennard Jones"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="externalEnergyMethods">
	<xs:restriction base="xs:string">
		<xs:enumeration value="ADF"/>
		<xs:enumeration value="GAMESS"/>
		<xs:enumeration value="GAMESS-UK"/>
		<xs:enumeration value="Firefly"/>
		<xs:enumeration value="Gaussian"/>
		<xs:enumeration value="Jaguar"/>
		<xs:enumeration value="Molpro"/>
		<xs:enumeration value="ORCA"/>
	</xs:restriction>
</xs:simpleType>

<xs:complexType name="resultsType">
	<xs:complexContent>
		<xs:extension base="structuresType">
			<xs:attribute name="maxSize" type="xs:positiveInteger"/>
			<xs:attribute name="rmsDistance" type="nonNegativeDecimal"/>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>

<xs:complexType name="simulatedAnnealingSetupType">
	<xs:all>
		<xs:element name="structuresTemplate" type="structuresTemplateType"/>
		<xs:element name="temperature" minOccurs="0">
			<xs:complexType>
				<xs:choice>
					<xs:element name="kelvin">
						<xs:complexType>
							<xs:attribute name="value" type="positiveDecimal" use="required"/>
						</xs:complexType>
					</xs:element>
					<xs:element name="acceptedPerturbations">
						<xs:complexType>
							<xs:attribute name="percent" type="percentage" default="90"/>
						</xs:complexType>
					</xs:element>
				</xs:choice>
				<xs:attribute name="decreaseAfterIteration" type="xs:positiveInteger" default="1"/>
				<xs:attribute name="boltzmannConstant" type="positiveDecimal" default="3.16689e-6"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="annealingSchedule" minOccurs="0">
			<xs:complexType>
				<xs:attribute name="quenchingFactor" type="positiveDecimal" default="0.9995"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="perturbations" type="simulatedAnnealingPerturbationsType" minOccurs="0"/>
		<xs:element name="stop" minOccurs="0">
			<xs:complexType>
				<xs:attribute name="maxTemperature" type="positiveDecimal"/>
				<xs:attribute name="maxAcceptedPerturbations" type="percentage"/>
				<xs:attribute name="minIterations" type="xs:positiveInteger"/>
			</xs:complexType>
		</xs:element>
	</xs:all>
	<xs:attribute name="saveFrequency" type="xs:positiveInteger" default="1"/>
	<xs:attribute name="acceptedPertHistIt" type="xs:positiveInteger" default="200"/>
</xs:complexType>

<xs:complexType name="simulatedAnnealingPerturbationsType">
	<xs:all>
		<xs:element name="translationVector" minOccurs="0">
			<xs:complexType>
				<xs:attribute name="startLength" type="positiveDecimal" use="required"/>
				<xs:attribute name="minLength" type="nonNegativeDecimal" default="0"/>
				<xs:attribute name="probability" type="probability" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="rotationAngle" minOccurs="0">
			<xs:complexType>
				<xs:attribute name="startDegrees" type="positiveDegrees" use="required"/>
				<xs:attribute name="minDegrees" type="nonNegativeDegrees" default="0"/>
				<xs:attribute name="probability" type="probability" use="required"/>
			</xs:complexType>
		</xs:element>
	</xs:all>
	<xs:attribute name="numberPerIteration" type="xs:positiveInteger" default="1"/>
</xs:complexType>

<xs:complexType name="simulatedAnnealingResumeType">
	<xs:all>
		<xs:element name="temperature">
			<xs:complexType>
				<xs:attribute name="value" type="positiveDecimal" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="translationVector" minOccurs="0">
			<xs:complexType>
				<xs:attribute name="length" type="positiveDecimal" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="rotationAngle" minOccurs="0">
			<xs:complexType>
				<xs:attribute name="radians" type="positiveDecimal" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="perturbationsPerIteration">
			<xs:complexType>
				<xs:attribute name="value" type="positiveDecimal" default="1"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="acceptedPerturbationHistory">
			<xs:complexType>
				<xs:simpleContent>
					<xs:extension base="xs:string">
						<xs:attribute name="index" type="xs:nonNegativeInteger" use="required"/>
					</xs:extension>
				</xs:simpleContent>
			</xs:complexType>
		</xs:element>
		<xs:element name="iteration">
			<xs:complexType>
				<xs:attribute name="value" type="xs:nonNegativeInteger" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="totalEnergyCalculations">
			<xs:complexType>
				<xs:attribute name="value" type="xs:nonNegativeInteger" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="elapsedSeconds">
			<xs:complexType>
				<xs:attribute name="value" type="xs:nonNegativeInteger" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="runComplete">
			<xs:complexType>
				<xs:attribute name="value" type="xs:boolean" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="structure" type="structureType"/>
	</xs:all>
</xs:complexType>

<xs:complexType name="structuresTemplateType">
	<xs:all>
		<xs:element name="structureTemplate" type="structureTemplateType" minOccurs="0"/>
		<xs:element name="linear" type="initializationType" minOccurs="0"/>
		<xs:element name="planar" type="initializationType" minOccurs="0"/>
		<xs:element name="threeD" type="initializationType" minOccurs="0"/>
		<xs:element name="bondRotationalSearch" minOccurs="0">
			<xs:complexType>
				<xs:attribute name="degrees" type="positiveDegrees" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="seed" minOccurs="0">
			<xs:complexType>
				<xs:sequence>
					<xs:element name="agmlFile" type="seedFileType" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="directory" type="seedDirType" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="energyFile" type="energyFileType" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
				<xs:attribute name="freezingIterations" type="xs:nonNegativeInteger" default="0"/>
			</xs:complexType>
		</xs:element>
	</xs:all>
	<xs:attribute name="constraints" type="xs:string"/>
</xs:complexType>
<xs:complexType name="initializationType">
	<xs:attribute name="number" type="xs:positiveInteger" use="required"/>
	<xs:attribute name="constraints" type="xs:string"/>
</xs:complexType>
<xs:complexType name="seedFileType">
	<xs:attribute name="path" type="xs:string" use="required"/>
	<xs:attribute name="number" type="xs:string" default="all"/>
	<xs:attribute name="source" type="seedFileSourceType" default="results"/>
</xs:complexType>
<xs:simpleType name="seedFileSourceType">
	<xs:restriction base="xs:string">
		<xs:enumeration value="results"/>
		<xs:enumeration value="population"/>
	</xs:restriction>
</xs:simpleType>
<xs:complexType name="seedDirType">
	<xs:attribute name="path" type="xs:string" use="required"/>
	<xs:attribute name="number" type="xs:string" default="all"/>
	<xs:attribute name="type" type="externalEnergyMethods" use="required"/>
</xs:complexType>
<xs:complexType name="energyFileType">
	<xs:attribute name="path" type="xs:string" use="required"/>
	<xs:attribute name="type" type="externalEnergyMethods" use="required"/>
</xs:complexType>

<xs:complexType name="structureTemplateType">
	<xs:sequence>
		<xs:element name="moleculeTemplate" minOccurs="0" maxOccurs="unbounded">
			<xs:complexType>
				<xs:simpleContent>
					<xs:extension base="xs:string">
						<xs:attribute name="number" type="xs:positiveInteger" default="1"/>
						<xs:attribute name="format" type="coordinateType" default="Cartesian"/>
					</xs:extension>
				</xs:simpleContent>
			</xs:complexType>
		</xs:element>
		<xs:element name="atomTemplate" minOccurs="0" maxOccurs="unbounded">
			<xs:complexType>
				<xs:attribute name="number" type="xs:positiveInteger" default="1"/>
				<xs:attribute name="Z" type="xs:string" use="required"/>
			</xs:complexType>
		</xs:element>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="structuresType">
	<xs:sequence>
		<xs:element name="structure" type="structureType" minOccurs="1" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>

<xs:complexType name="structureType">
	<xs:sequence>
		<xs:element name="atomGroup" minOccurs="1" maxOccurs="unbounded">
			<xs:complexType>
				<xs:sequence>
					<xs:element name="translation" minOccurs="0" maxOccurs="1">
						<xs:complexType>
							<xs:attribute name="x" type="xs:double" use="required"/>
							<xs:attribute name="y" type="xs:double" use="required"/>
							<xs:attribute name="z" type="xs:double" use="required"/>
						</xs:complexType>
					</xs:element>
					<xs:element name="radianAngles" minOccurs="0" maxOccurs="1">
						<xs:complexType>
							<xs:attribute name="x" type="nonNegativeDecimal" use="required"/>
							<xs:attribute name="y" type="nonNegativeDecimal" use="required"/>
							<xs:attribute name="z" type="nonNegativeDecimal" use="required"/>
						</xs:complexType>
					</xs:element>
					<xs:element name="atom" minOccurs="1" maxOccurs="unbounded">
						<xs:complexType>
							<xs:attribute name="Z" type="xs:positiveInteger" use="required"/>
							<xs:attribute name="x" type="xs:double" use="required"/>
							<xs:attribute name="y" type="xs:double" use="required"/>
							<xs:attribute name="z" type="xs:double" use="required"/>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
				<xs:attribute name="frozen" type="xs:boolean" default="false"/>
			</xs:complexType>
		</xs:element>
	</xs:sequence>
	<xs:attribute name="energy" type="xs:double" default="0"/>
	<xs:attribute name="isTransitionState" type="xs:boolean" default="false"/>
	<xs:attribute name="id" type="xs:integer" default="0"/>
	<xs:attribute name="filePrefix" type="xs:string"/>
</xs:complexType>


<xs:complexType name="randomSearchType">
	<xs:sequence>
		<xs:element name="setup" type="randomSearchSetupType"/>
		<xs:element name="constraints" type="constraintsType" minOccurs="0" maxOccurs="unbounded"/>
		<xs:element name="energy" type="energyType"/>
		<xs:element name="resume" type="randomSearchResumeType" minOccurs="0"/>
		<xs:element name="results" type="resultsType" minOccurs="0"/>
	</xs:sequence>
	<xs:attribute name="nonFragmentedSearch" type="xs:boolean" default="true"/>
	<xs:attribute name="constraints" type="xs:string"/>
</xs:complexType>
<xs:complexType name="randomSearchSetupType">
	<xs:all>
		<xs:element name="structuresTemplate" type="structuresTemplateType"/>
		<xs:element name="perturbations" type="simulatedAnnealingPerturbationsType"/>
		<xs:element name="stop">
			<xs:complexType>
				<xs:attribute name="iteration" type="xs:positiveInteger"/>
			</xs:complexType>
		</xs:element>
	</xs:all>
	<xs:attribute name="saveFrequency" type="xs:positiveInteger" default="1"/>
</xs:complexType>
<xs:complexType name="randomSearchResumeType">
	<xs:all>
		<xs:element name="iteration">
			<xs:complexType>
				<xs:attribute name="value" type="xs:nonNegativeInteger" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="totalEnergyCalculations">
			<xs:complexType>
				<xs:attribute name="value" type="xs:nonNegativeInteger" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="elapsedSeconds">
			<xs:complexType>
				<xs:attribute name="value" type="xs:nonNegativeInteger" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="runComplete">
			<xs:complexType>
				<xs:attribute name="value" type="xs:boolean" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="structures" type="structuresType"/>
	</xs:all>
</xs:complexType>

<xs:complexType name="psoType">
	<xs:sequence>
		<xs:element name="setup" type="psoSetupType"/>
		<xs:element name="constraints" type="constraintsType" minOccurs="0" maxOccurs="unbounded"/>
		<xs:element name="energy" type="energyType"/>
		<xs:element name="resume" type="psoResumeType" minOccurs="0"/>
		<xs:element name="results" type="resultsType" minOccurs="0"/>
	</xs:sequence>
	<xs:attribute name="constraints" type="xs:string"/>
</xs:complexType>
<xs:complexType name="psoSetupType">
	<xs:all>
		<xs:element name="structuresTemplate" type="structuresTemplateType"/>
		<xs:element name="velocities">
			<xs:complexType>
				<xs:all>
					<xs:element name="coordinate" type="psoVelocityType"/>
					<xs:element name="angle" type="psoVelocityType" minOccurs="0"/>
				</xs:all>
			</xs:complexType>
		</xs:element>
		<xs:element name="visibility">
			<xs:complexType>
				<xs:attribute name="start" type="xs:string" default="auto"/>
				<xs:attribute name="increment" type="nonNegativeDecimal" default="0"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="repulsion" minOccurs="0">
			<xs:complexType>
				<xs:all>
					<xs:element name="start">
						<xs:complexType>
							<xs:attribute name="diversity" type="positiveDecimal" use="required"/>
							<xs:attribute name="improvementIterations" type="xs:positiveInteger"/>
						</xs:complexType>
					</xs:element>
					<xs:element name="stop">
						<xs:complexType>
							<xs:attribute name="diversity" type="positiveDecimal" use="required"/>
						</xs:complexType>
					</xs:element>
				</xs:all>
			</xs:complexType>
		</xs:element>
		<xs:element name="bestMemory" minOccurs="0">
			<xs:complexType>
				<xs:attribute name="updateIndividual" type="positiveDecimal" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="minDistanceConstraints" minOccurs="0">
			<xs:complexType>
				<xs:attribute name="applyOnCopy" type="xs:boolean" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="stop" minOccurs="0">
			<xs:complexType>
				<xs:attribute name="iteration" type="xs:positiveInteger" use="required"/>
			</xs:complexType>
		</xs:element>
	</xs:all>
	<xs:attribute name="saveFrequency" type="xs:positiveInteger" default="1"/>
</xs:complexType>


<xs:complexType name="psoVelocityType">
	<xs:all>
		<xs:element name="inertia">
			<xs:complexType>
				<xs:attribute name="value" type="positiveDecimal" default="0.95"/>
				<xs:attribute name="endValue" type="positiveDecimal"/>
				<xs:attribute name="endIteration" type="xs:positiveInteger"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="cp">
			<xs:complexType>
				<xs:attribute name="value" type="nonNegativeDecimal" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="ci">
			<xs:complexType>
				<xs:attribute name="value" type="nonNegativeDecimal" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="vMax" minOccurs="0">
			<xs:complexType>
				<xs:attribute name="value" type="nonNegativeDecimal" use="required"/>
			</xs:complexType>
		</xs:element>
	</xs:all>
</xs:complexType>

<xs:complexType name="psoResumeType">
	<xs:all>
		<xs:element name="visibility">
			<xs:complexType>
				<xs:attribute name="value" type="nonNegativeDecimal" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="repulsion">
			<xs:complexType>
				<xs:attribute name="phase" type="xs:boolean" use="required"/>  <!-- true = atraction phase, false = repulsion phase -->
				<xs:attribute name="improvementIterations" type="xs:nonNegativeInteger" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="iteration">
			<xs:complexType>
				<xs:attribute name="value" type="xs:nonNegativeInteger" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="totalEnergyCalculations">
			<xs:complexType>
				<xs:attribute name="value" type="xs:nonNegativeInteger" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="elapsedSeconds">
			<xs:complexType>
				<xs:attribute name="value" type="xs:nonNegativeInteger" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="runComplete">
			<xs:complexType>
				<xs:attribute name="value" type="xs:boolean" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="structures" type="structuresType"/>
		<xs:element name="individualBest" type="structuresType"/>
	</xs:all>
</xs:complexType>

<xs:complexType name="gaType">
	<xs:sequence>
		<xs:element name="setup" type="gaSetupType"/>
		<xs:element name="constraints" type="constraintsType" minOccurs="0" maxOccurs="unbounded"/>
		<xs:element name="energy" type="energyType"/>
		<xs:element name="resume" type="gaResumeType" minOccurs="0"/>
		<xs:element name="results" type="resultsType" minOccurs="0"/>
	</xs:sequence>
	<xs:attribute name="constraints" type="xs:string"/>
</xs:complexType>
<xs:complexType name="gaSetupType">
	<xs:all>
		<xs:element name="structuresTemplate" type="structuresTemplateType"/>
		<xs:element name="mateSelection">
			<xs:complexType>
				<xs:attribute name="method" type="mateSelectionType" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="mating">
			<xs:complexType>
				<xs:attribute name="method" type="matingMethod" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="generationReplacement">
			<xs:complexType>
				<xs:attribute name="method" type="generationReplacementMethod" use="required"/>
				<xs:attribute name="value" type="percentage" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="stop" minOccurs="0">
			<xs:complexType>
				<xs:attribute name="iteration" type="xs:positiveInteger" use="required"/>
			</xs:complexType>
		</xs:element>
	</xs:all>
	<xs:attribute name="saveFrequency" type="xs:positiveInteger" default="1"/>
</xs:complexType>
<xs:simpleType name="matingMethod">
	<xs:restriction base="xs:string">
		<xs:enumeration value="simple"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="generationReplacementMethod">
	<xs:restriction base="xs:string">
		<xs:enumeration value="parentPercentage"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="mateSelectionType">
	<xs:restriction base="xs:string">
		<xs:enumeration value="tournament"/>
	</xs:restriction>
</xs:simpleType>
<xs:complexType name="gaResumeType">
	<xs:all>
		<xs:element name="iteration">
			<xs:complexType>
				<xs:attribute name="value" type="xs:nonNegativeInteger" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="totalEnergyCalculations">
			<xs:complexType>
				<xs:attribute name="value" type="xs:nonNegativeInteger" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="elapsedSeconds">
			<xs:complexType>
				<xs:attribute name="value" type="xs:nonNegativeInteger" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="runComplete">
			<xs:complexType>
				<xs:attribute name="value" type="xs:boolean" use="required"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="structures" type="structuresType"/>
	</xs:all>
</xs:complexType>


<xs:complexType name="batchType">
	<xs:sequence>
		<xs:element name="setup">
			<xs:complexType>
				<xs:all>
					<xs:element name="structuresTemplate" type="structuresTemplateType"/>
				</xs:all>
				<xs:attribute name="saveFrequency" type="xs:positiveInteger" default="1"/>
				<xs:attribute name="queueSize" type="xs:positiveInteger" default="3"/>
			</xs:complexType>
		</xs:element>
		<xs:element name="constraints" type="constraintsType" minOccurs="0" maxOccurs="unbounded"/>
		<xs:element name="energy" type="energyType"/>
		<xs:element name="resume" minOccurs="0">
			<xs:complexType>
				<xs:all>
					<xs:element name="totalEnergyCalculations">
						<xs:complexType>
							<xs:attribute name="value" type="xs:nonNegativeInteger" use="required"/>
						</xs:complexType>
					</xs:element>
					<xs:element name="elapsedSeconds">
						<xs:complexType>
							<xs:attribute name="value" type="xs:unsignedLong" use="required"/>
						</xs:complexType>
					</xs:element>
					<xs:element name="runComplete">
						<xs:complexType>
							<xs:attribute name="value" type="xs:boolean" use="required"/>
						</xs:complexType>
					</xs:element>
					<xs:element name="structures" type="structuresType"/>
				</xs:all>
			</xs:complexType>
		</xs:element>
		<xs:element name="results" type="resultsType" minOccurs="0"/>
	</xs:sequence>
</xs:complexType>

<!-- generic simple types -->
<xs:simpleType name="positiveDecimal">
	<xs:restriction base="xs:double">
		<xs:minExclusive value="0"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="nonNegativeDecimal">
	<xs:restriction base="xs:double">
		<xs:minInclusive value="0"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="positiveDegrees">
	<xs:restriction base="xs:double">
		<xs:minInclusive value="0"/>
		<xs:maxInclusive value="360"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="nonNegativeDegrees">
	<xs:restriction base="xs:double">
		<xs:minInclusive value="0"/>
		<xs:maxExclusive value="360"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="percentage">
	<xs:restriction base="xs:double">
		<xs:minInclusive value="0"/>
		<xs:maxInclusive value="100"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="probability">
	<xs:restriction base="xs:double">
		<xs:minInclusive value="0"/>
		<xs:maxInclusive value="1"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="coordinateType">
	<xs:restriction base="xs:string">
		<xs:enumeration value="Cartesian"/>
	</xs:restriction>
</xs:simpleType>
</xs:schema>
