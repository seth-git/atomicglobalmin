There are two differences between this version and the previous.  First, this version allows you to specify a wall time and will terminate before the wall time is up (-walltime option).  Second, this version has differences in the way it uses MPI.  The previous version of the program ran one Gaussian job for every MPI process.  For example, with a population size of 32 and 8 processes, the previous program would have each of the 8 processes perform exactly four Gaussian jobs one after another, and MPI processes would not communicate with each other.  Also, there was a seperate "mpi" application that the main "pso" application would call each iteration.  In current version, the "pso" executable is an MPI application that allows more options with mpi communication between nodes (-m and -i).  With the -m option, the main program runs as the master MPI process and sends MPI messages to the other slave processes to perform Gaussian jobs.  The master MPI process does not perform Gaussian jobs.  It only sends these jobs to the slave processes.  It is therefore a good idea to have the population size be one less than the number of nodes.  The -i option is used with simulated annealing and allows members of the population to act as independent runs to speed up calculations.  This new version also has a sepeerate "helper" executable that is not an MPI application which performs maintenance tasks (type ./helper -h for more information).
